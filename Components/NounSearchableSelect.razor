@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.EntityFrameworkCore
@inject IConfiguration Config
@inject IJSRuntime JS

<SearchableSelect T="Noun" Value=Value ValueChanged=ValueChanged Search=SearchNouns Id="Id" Placeholder="Placeholder" AddOptionFragment=Cap.ChildContent />
<CaptureRenderFragment @ref=Cap>
	<p>This RF has Stockholm Syndrome.</p>
</CaptureRenderFragment>
@code
{
	[Parameter]
	[EditorRequired]
	public Noun? Value { get; set; }

	[Parameter]
	public EventCallback<Noun?> ValueChanged { get; set; }

	[Parameter]
	[EditorRequired]
	public string? Id { get; set; }

	[Parameter]
	public string? Placeholder { get; set; } = "Nouns starting with...";

	private CaptureRenderFragment Cap = new CaptureRenderFragment();

	private async Task<IEnumerable<Noun>> SearchNouns(string searchTerm)
	{
		using var db = Contexts.FIABContext.Create(Config);
		var results = await db.Nouns.Where(n => n.Name.ToLower().StartsWith(searchTerm.ToLower()))
		.AsNoTracking()
		.Take(8)
		.ToListAsync();
		return results;
	}
}