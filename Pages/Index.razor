@page "/"
@using Microsoft.EntityFrameworkCore
@inject IConfiguration Config

<h1 class="mb-4">FIAB</h1>

<AuthorizeView>
    @* User is logged in. *@
    <Authorized>
        <AuthorizeView Roles=@Constants.Roles.User Context="NestedAuthContext">
            <Authorized>
                <p>This would be a great place to have a cached, navigable 3d graph of all the relationships, but there's a lot of work between here and there.</p>
                <p>For now you can checkout our lovely collection of <a href="/Nouns">Nouns</a>.</p>
            </Authorized>
            <NotAuthorized>
                <p>You do not have the <strong>@Constants.Roles.User</strong> role, and will not be able to use most parts of this system.</p>
                <p>Please contact the administrator to confirm you have the correct roles.</p>
            </NotAuthorized>
        </AuthorizeView>
    </Authorized>
    @* User is NOT logged in. *@
    <NotAuthorized>
        <p>You must login to use FIAB.</p>
    </NotAuthorized>
</AuthorizeView>

<h2>Searchable Select</h2>
<SearchableSelect @bind-Value=thing Search=SearchNouns Id="string-id" />

@code
{
    private Noun? thing;

    private async Task<IEnumerable<Noun>> SearchNouns(string searchTerm)
    {
        using var db = Contexts.FIABContext.Create(Config);
        var results = await db.Nouns.Where(n => n.Name.ToLower().StartsWith(searchTerm.ToLower()))
        .AsNoTracking()
        .ToListAsync();
        return results;
    }
}
