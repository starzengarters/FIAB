@page "/Nouns"
@using FIAB.Models;
@using FIAB.Contexts;
@using Microsoft.EntityFrameworkCore;
@using System.Linq
@inject IConfiguration Config

<div class="container">

<DisplayError Error=Error />

<AuthorizeView Roles=@Constants.Roles.User>
	<NotAuthorized>
		<Alert Color="AlertColor.Warning">@Constants.Messages.RoleRequiredUser</Alert>
	</NotAuthorized>
	<Authorized>
		<ShowLoading Loading=Loading>
			<div class="row">
				<div class="col-8 ps-0">
					<h1 class="text-start">Nouns</h1>
				</div>
				<div class="col-md-4 text-end">
					<Button Type="ButtonType.Link" Color="ButtonColor.Primary" To="/Nouns/Create"> Add a new Noun </Button>
				</div>
			</div>
			<div class="row">
				<table class="table table-striped">
					<thead>
						<tr>
							<th scope="col" class="col-8">Name</th>
							<th scope="col" class="col-4">Actions</th>
						</tr>
					</thead>
					<tbody>
					@foreach(var noun in Listing)
					{
						<tr>
							<td>
								@noun.Name<br/>
								<span style="font-size: smaller;">@noun.ShortDescription</span>
							</td>
							<td class="text-end">
								<Button Type="ButtonType.Link" To=@($"/Nouns/{noun.Id}") Color="ButtonColor.Primary" Size="Size.Small">View</Button>
								<Button Type="ButtonType.Link" To=@($"/Nouns/{noun.Id}/Edit") Color="ButtonColor.Primary" Outline="true" Size="Size.Small">Edit</Button>
							</td>
						</tr>
					}
					</tbody>
				</table>
			</div>
		</ShowLoading>
	</Authorized>
</AuthorizeView>
</div>

@code
{
	private bool Loading = true;
	private Exception? Error;

	private List<Noun> Listing = new List<Noun>();

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		try
		{
			if(firstRender)
			{
				using var context = FIABContext.Create(Config);
				// TODO - Pagination and Filtering will be needed soon.
				Listing = await context.Nouns.ToListAsync();
			}
		}
		catch(Exception ex)
		{
			Error = ex;
		}
		finally
		{
			Loading = false;
			StateHasChanged();
		}
	}

	private FIABContext GetContext()
	{
		return FIABContext.Create(Config);
	}
}